# Generated by Django 4.1.4 on 2022-12-28 20:17

import core.models.car_showroom
import core.models.consumer
import core.models.provider.provider
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "password",
                    models.CharField(max_length=128, verbose_name="password"),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        verbose_name="email address",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="date joined",
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("CONSUMER", "consumer"),
                            ("CAR_SHOWROOM", "car showroom"),
                            ("PROVIDER", "provider"),
                        ],
                        default="CONSUMER",
                        max_length=12,
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="AttachmentSample",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("attachment", models.FileField(upload_to="")),
            ],
        ),
        migrations.CreateModel(
            name="CarShowroomProvider",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("number_of_purchases", models.IntegerField()),
            ],
            options={
                "db_table": "car_showroom_provider",
            },
        ),
        migrations.CreateModel(
            name="Vehicle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("model", models.CharField(max_length=30)),
                (
                    "value",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("amount", models.IntegerField()),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vehicles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "car_showroom_vehicle",
            },
        ),
        migrations.CreateModel(
            name="UserVehicleCharacteristics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("body_type", models.CharField(max_length=30)),
                ("number_of_seats", models.IntegerField()),
                ("load_capacity", models.IntegerField()),
                (
                    "weight",
                    models.DecimalField(decimal_places=1, max_digits=5),
                ),
                (
                    "engine_type",
                    models.CharField(
                        choices=[
                            ("P", "Petrol"),
                            ("D", "Diesel"),
                            ("E", "Electricity"),
                        ],
                        max_length=1,
                    ),
                ),
                ("max_speed", models.IntegerField()),
                (
                    "vehicle",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="characteristics",
                        to="core.vehicle",
                    ),
                ),
            ],
            options={
                "db_table": "vehicle_characteristics",
            },
        ),
        migrations.CreateModel(
            name="SpecialOffer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("name", models.CharField(max_length=30)),
                ("description", models.TextField()),
                ("date_from", models.DateTimeField()),
                ("date_to", models.DateTimeField()),
                ("discount", models.IntegerField()),
                (
                    "car_showroom",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="special_offers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "vehicle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="special_offers",
                        to="core.vehicle",
                    ),
                ),
            ],
            options={
                "db_table": "special_offer",
            },
        ),
        migrations.AddField(
            model_name="user",
            name="car_showroom_provider_m2m",
            field=models.ManyToManyField(
                through="core.CarShowroomProvider", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
        migrations.CreateModel(
            name="CarShowroom",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("core.user",),
            managers=[
                ("objects", core.models.car_showroom.CarShowroomManager()),
            ],
        ),
        migrations.CreateModel(
            name="Consumer",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("core.user",),
            managers=[
                ("objects", core.models.consumer.ConsumerManager()),
            ],
        ),
        migrations.CreateModel(
            name="Provider",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("core.user",),
            managers=[
                ("objects", core.models.provider.provider.ProviderManager()),
            ],
        ),
        migrations.CreateModel(
            name="PurchaseHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("amount", models.IntegerField()),
                (
                    "value",
                    models.DecimalField(decimal_places=2, max_digits=12),
                ),
                ("purchase_datetime", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="purchase_history",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "vehicle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="purchase_history",
                        to="core.vehicle",
                    ),
                ),
                (
                    "car_showroom",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_purchase_history",
                        to="core.carshowroom",
                    ),
                ),
            ],
            options={
                "db_table": "purchase_history",
            },
        ),
        migrations.CreateModel(
            name="ProviderProvile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("provider_name", models.CharField(max_length=30)),
                ("date_of_foundation", models.DateField()),
                ("number_of_buyers", models.IntegerField()),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="provider_profile",
                        to="core.provider",
                    ),
                ),
            ],
            options={
                "db_table": "provider_profile",
            },
        ),
        migrations.CreateModel(
            name="ProviderDiscount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("purchases_before_discount", models.IntegerField()),
                ("discount", models.IntegerField()),
                (
                    "provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="discounts",
                        to="core.provider",
                    ),
                ),
            ],
            options={
                "db_table": "provider_discount",
            },
        ),
        migrations.CreateModel(
            name="DesiredVehicleCharacteristics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("body_type", models.CharField(max_length=30)),
                ("number_of_seats", models.IntegerField()),
                ("load_capacity", models.IntegerField()),
                (
                    "weight",
                    models.DecimalField(decimal_places=1, max_digits=5),
                ),
                (
                    "engine_type",
                    models.CharField(
                        choices=[
                            ("P", "Petrol"),
                            ("D", "Diesel"),
                            ("E", "Electricity"),
                        ],
                        max_length=1,
                    ),
                ),
                ("max_speed", models.IntegerField()),
                (
                    "car_showroom",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="desired_characteristics",
                        to="core.carshowroom",
                    ),
                ),
            ],
            options={
                "db_table": "desired_vehicle_characteristics",
            },
        ),
        migrations.CreateModel(
            name="ConsumerProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("first_name", models.CharField(max_length=30)),
                ("second_name", models.CharField(max_length=30)),
                ("age", models.IntegerField()),
                (
                    "sex",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female")], max_length=1
                    ),
                ),
                ("driver_license", models.BooleanField(default=False)),
                (
                    "money",
                    models.DecimalField(decimal_places=2, max_digits=12),
                ),
                (
                    "consumer",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="consumer_profile",
                        to="core.consumer",
                    ),
                ),
            ],
            options={
                "db_table": "consumer_profile",
            },
        ),
        migrations.AddField(
            model_name="carshowroomprovider",
            name="car_showroom",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="car_showroom_user",
                to="core.carshowroom",
            ),
        ),
        migrations.AddField(
            model_name="carshowroomprovider",
            name="provider",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="provider_user",
                to="core.provider",
            ),
        ),
        migrations.CreateModel(
            name="CarShowroomProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("car_showroom_name", models.CharField(max_length=30)),
                (
                    "locarion_country",
                    django_countries.fields.CountryField(max_length=2),
                ),
                ("location_city", models.CharField(max_length=30)),
                ("location_street", models.CharField(max_length=30)),
                ("location_house", models.CharField(max_length=30)),
                (
                    "money",
                    models.DecimalField(decimal_places=2, max_digits=12),
                ),
                (
                    "car_showroom",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="car_showroom_profile",
                        to="core.carshowroom",
                    ),
                ),
            ],
            options={
                "db_table": "car_showroom_profile",
            },
        ),
    ]
